<?xml version="1.0" encoding="UTF-8"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi" xmlns:util="http://schemas.microsoft.com/wix/UtilExtension">
  <Product
      Manufacturer='$(var.MANUFACTURER)'
      Name='$(var.PRODUCT)'
      Version='$(var.VERSION)'
      Language='1033'
      UpgradeCode='fc67ab4e-2f1a-47bb-a64f-5c17ff8107da'
      Id='*'>


    <!--  Install per Machine -->
    <Package InstallScope="perMachine" InstallerVersion='500' Compressed='yes'/>


    <!--  Abort -->
    <Condition Message="Abort [AbortReason]">Installed or (not AbortReason)</Condition>

    <!-- Allow command line alias for Property  -->
    <SetProperty  Id="INSTALLDIR"   Value='[INSTALLFOLDER]' Before="LaunchConditions">INSTALLFOLDER</SetProperty>

    <!-- Conditionally set property -->
    <SetProperty  Id="CONFIGDIR"   Value='C:\aaaProduct' Before="CostFinalize">NOT (MOVE_CONF_PROGRAMDATA = "1")</SetProperty>    <!-- Previously installed? Read both (32/64) registries on 64.-->

    <!-- Previously installed? Read both (32/64) registries on 64.-->
    <?if $(var.WIN64)="yes" ?>
      <Property Id="INSTALLDIR64REG">
          <RegistrySearch Root="HKLM" Key="SOFTWARE\$(var.MANUFACTURER)\$(var.PRODUCT)" Name="root_dir"
                          Id="installdir64" Win64="yes" Type="raw"/>
      </Property>
    <?endif ?>
    <Property Id="INSTALLDIR32REG">
          <RegistrySearch Root="HKLM" Key="SOFTWARE\$(var.MANUFACTURER)\$(var.PRODUCT)" Name="root_dir"
                          Id="installdir32" Win64="no" Type="raw"/>
    </Property>
    <?if $(var.WIN64)="yes" ?>
      <Property Id="CONFIGDIR64REG">
          <RegistrySearch Root="HKLM" Key="SOFTWARE\$(var.MANUFACTURER)\$(var.PRODUCT)" Name="config_dir"
                          Id="configdir64" Win64="yes" Type="raw"/>
      </Property>
    <?endif ?>
    <Property Id="CONFIGDIR32REG">
          <RegistrySearch Root="HKLM" Key="SOFTWARE\$(var.MANUFACTURER)\$(var.PRODUCT)" Name="config_dir"
                          Id="configdir32" Win64="no" Type="raw"/>
    </Property>

    <!--  The Directories  -->
    <Directory Id='TARGETDIR' Name='SourceDir'>    <!-- fixed expression -->
      <Directory Id="$(var.PROGRAMFILES)">    <!-- typically    C:\Program Files or   C:\Program Files (x86) -->
        <Directory Id='PROGRAMFILES_MANUFACTURER' Name='$(var.MANUFACTURER)'>
          <Directory Id='INSTALLDIR' Name='$(var.PRODUCT)'/> <!-- user can set/override this in CLI or GUI  -->
        </Directory>
      </Directory>
      <Directory Id="CommonAppDataFolder">    <!-- typically    %ProgramData% C:\ProgramData  but NOT AppData-->
        <Directory Id="Manufacturer_CommonAppDataFolder" Name="$(var.MANUFACTURER)">
          <Directory Id="CONFIGDIR" Name="$(var.PRODUCT)">
            <Component Id='Config.component' Win64="$(var.WIN64)">
              <File Id='Config.fileID' Source="$(var.CONFIG)" KeyPath='yes'/>
            </Component>
          </Directory>
        </Directory>
      </Directory>
    </Directory>

    <!--  Assemble the Features  -->
    <Feature Id='Complete'>
      <ComponentGroupRef Id="DiscoveredFiles" />
      <ComponentRef      Id='Config.component'/>
    </Feature>


    <!--  The GUI Sequence  -->
    <!--
      Run under the msi initiating user’s privelege.
      No changes applied. msi asks for input from the user
      https://docs.microsoft.com/en-us/windows/win32/msi/suggested-installuisequence
      -->
    <InstallUISequence>
      <Custom Action='ReadConfig_IMCAC'       Before='LaunchConditions'  >NOT Installed</Custom>
    </InstallUISequence>


    <!--  The Install Sequence  -->
    <!--
      Run using the localsystem user’s privilege (aka server side).
      https://docs.microsoft.com/en-us/windows/win32/msi/suggested-installexecutesequence

      Before MigrateFeatureStates:
        Custom action is placed before the transaction starts, coined "immediate".
        You should not modifiy the system.
      After InstallFiles:
        Custom action is placed after the transaction started, coined "deferred".
        Deferred custom actions (DECAC) need custum action helper (CADH) to access msi properties
        You may modify the system.
      -->
    <InstallExecuteSequence>
      <Custom Action='ReadConfig_IMCAC'       Before='LaunchConditions'  >NOT Installed</Custom>
      <Custom Action='WriteConfig_CADH'
              Before='WriteConfig_DECAC'                                 >NOT Installed</Custom>
      <Custom Action='WriteConfig_DECAC'      After='InstallFiles'       >NOT Installed</Custom>
    </InstallExecuteSequence>


    <!--  The Custom Actions  -->
    <Binary Id='CustomAction01' SourceFile='CustomAction01\CustomAction01.CA.dll'/>

    <!--      IMMEDIATE CUSTOM ACTION (IMCAC) run before the transaction and should not modify the system -->
    <CustomAction
      Id="ReadConfig_IMCAC"
      DllEntry='ReadConfig_IMCAC'
      BinaryKey='CustomAction01'
      Execute='firstSequence'/>

    <!--      DEFERRED CUSTOM ACTION (DECAC) runs in a transaction and may modify the system -->
    <CustomAction
      Id="WriteConfig_DECAC"
      DllEntry='WriteConfig_DECAC'
      BinaryKey='CustomAction01'
      Execute='deferred'
      Return='check'
      Impersonate='no'/>

    <!--      Pass msi properties to the DEFERRED CUSTOM ACTION (DECAC)  -->
    <CustomAction
      Id="WriteConfig_CADH"
      Property="WriteConfig_DECAC"
      Value="RootOld=[RootOld];RootNew=[RootNew];MOVE_CONF_PROGRAMDATA=[MOVE_CONF_PROGRAMDATA];" />


    <!--  The GUI  -->
    <Property Id="WIXUI_INSTALLDIR" Value="INSTALLDIR"/>
    <UI Id="ProductUI">
      <UIRef Id="WixUI_InstallDir" />
      <Publish Dialog="InstallDirDlg"     Control="Next" Event="NewDialog" Value="VerifyReadyDlg" Order="4">1</Publish>
    </UI>


    <!--  No cab  -->
    <MediaTemplate EmbedCab="yes"/>
  </Product>
</Wix>
