<?xml version="1.0" encoding="UTF-8"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi" xmlns:util="http://schemas.microsoft.com/wix/UtilExtension">
  <Product
      Manufacturer='$(var.MANUFACTURER)'
      Name='$(var.PRODUCT)'
      Version='$(var.VERSION)'
      Language='1033'
      UpgradeCode='fc67ab4e-2f1a-47bb-a64f-5c17ff8107da'
      Id='*'>


    <!--  Install per Machine -->
    <Package InstallScope="perMachine" InstallerVersion='500' Compressed='yes'/>


    <!--  Aborts -->
    <?if $(var.WIN64)="no" ?>
      <Condition Message="The 32bit variant must be installed on 32bit Windows.">not VersionNT64</Condition>
    <?endif?>
    <Condition Message="[AbortReason]">Installed or (not AbortReason)</Condition>

    <Property Id="ROOTDRIVE" Value="C:\"/> <!-- prevent msi to chose the drive with most space left -->

    <!-- Allow command line alias for Property  -->
    <SetProperty Id="INSTALLDIR"  Value='[INSTALLFOLDER]'   Before="LaunchConditions">INSTALLFOLDER</SetProperty>
    <!-- Old configdir  -->
    <SetProperty Id="OCONFIGDIR"  Value='C:\$(var.PRODUCT)' Before="LaunchConditions">1</SetProperty>
    <!-- MINION_CONFIG implies MOVE_CONF  -->
    <SetProperty Id="MOVE_CONF" Value='1'                 Before="LaunchConditions">MINION_CONFIG</SetProperty>

    <!-- Search for C salt config minion file-->
    <Property Id="C_SALT_CONF_MINION_EXISTS">
      <DirectorySearch Id="ds1" Path="C:\salt\conf">
        <FileSearch Name="minion"/>
      </DirectorySearch>
    </Property>

    <!-- Search registry for previous msi and Nullsoft installs, assumes Nullsoft writes to 32bit registry-->
    <Property Id="PINSTALLDIR">
      <!-- C:\Program Files\Salt Project\Salt -->
      <!-- better-name for root_dir is installdir -->
      <RegistrySearch Root="HKLM" Key="SOFTWARE\$(var.MANUFACTURER)\$(var.PRODUCT)" Name="root_dir"  Win64="$(var.WIN64)" Type="raw" Id="rsi" />
      <RegistrySearch Root="HKLM" Key="SOFTWARE\$(var.MANUFACTURER)\$(var.PRODUCT)" Name="root_dir"  Win64="no"           Type="raw" Id="rsi_nullsoft" />
    </Property>
    <Property Id="PCONFIGDIR">
      <!-- C:\ProgramData\Salt Project\Salt -->
      <RegistrySearch Root="HKLM" Key="SOFTWARE\$(var.MANUFACTURER)\$(var.PRODUCT)" Name="config_dir" Win64="$(var.WIN64)" Type="raw" Id="rsc"/>
      <RegistrySearch Root="HKLM" Key="SOFTWARE\$(var.MANUFACTURER)\$(var.PRODUCT)" Name="config_dir" Win64="no"           Type="raw" Id="rsc_nullsoft"/>
    </Property>

    <!-- Write registry (declare components)-->
    <Component Id="write_to_registry" Directory="TARGETDIR">
      <RegistryKey Root="HKLM" Key="SOFTWARE\$(var.MANUFACTURER)\$(var.PRODUCT)">
        <RegistryValue Name="root_dir"      Value="[INSTALLDIR]" Type="string"/> <!-- better-name for root_dir is installdir -->
        <RegistryValue Name="config_dir"    Value="[CONFIGDIR]"  Type="string"/>
      </RegistryKey>
    </Component>
    <Component Id="write_to_registry_to_remove_all_config_on_uninstall" Directory="TARGETDIR">
      <RegistryKey Root="HKLM" Key="SOFTWARE\$(var.MANUFACTURER)\$(var.PRODUCT)" ForceDeleteOnUninstall="yes" >
        <RegistryValue Name="REMOVE_CONFIG" Value="1"            Type="string"/>
      </RegistryKey>
    </Component>

    <!--  Default directory layout, Admin could modify by setting properties.  -->
    <!-- write INSTALLDIR instead of ROOTDIR -->
    <!-- write INSTALLDIR instead of INSTALLFOLDER -->
    <Directory Id='TARGETDIR' Name='SourceDir'>                   <!-- Fixed expression -->
      <Directory Id="$(var.PROGRAMFILES)">                        <!-- C:\Program Files  or  C:\Program Files (x86) -->
        <Directory Id='installparent' Name='$(var.MANUFACTURER)'>
          <Directory Id='INSTALLDIR' Name='$(var.PRODUCT)'/>      <!-- Admin could modify  -->
        </Directory>
      </Directory>
      <Directory Id="CommonAppDataFolder">                        <!-- C:\ProgramData -->
        <Directory Id="configparent" Name="$(var.MANUFACTURER)">
          <Directory Id="CONFIGDIR" Name="$(var.PRODUCT)">        <!-- Admin could modify  -->
            <Directory Id="confdir" Name="conf" >
              <Component Id='Config.component' Win64="$(var.WIN64)">
                <File Id='Config.fileID' Source="$(var.CONFIG)" KeyPath='yes'/>
              </Component>
            </Directory>
          </Directory>
        </Directory>
      </Directory>
    </Directory>
    <!-- Set INSTALLDIR to previous install (before GUI and before install sequence) -->
    <SetProperty Id="INSTALLDIR" Value='[PINSTALLDIR]' Sequence="both"    Before="CostFinalize" Action="sid1">PINSTALLDIR</SetProperty>
    <!-- Set CONFIGDIR to previous install or old layout  (only before install sequence) -->
    <SetProperty Id="CONFIGDIR"  Value='[PCONFIGDIR]'  Sequence="execute" Before="CostFinalize" Action="scd1">not MOVE_CONF and     PCONFIGDIR</SetProperty>
    <SetProperty Id="CONFIGDIR"  Value='[OCONFIGDIR]'  Sequence="execute" Before="CostFinalize" Action="scd2">not MOVE_CONF and not PCONFIGDIR</SetProperty>


    <!--  Assemble the Features  -->
    <Feature Id='Complete'>
      <ComponentGroupRef Id="DiscoveredFiles" />
      <ComponentRef      Id='Config.component'/>
      <ComponentRef      Id='write_to_registry'/>
    </Feature>
    <Feature Id='remove_all_config_on_uninstall' Level='0'>
      <Condition Level="1">MINION_CONFIG or (REMOVE ~= "ALL")</Condition>
      <ComponentRef Id='write_to_registry_to_remove_all_config_on_uninstall'/>
    </Feature>


    <!--  The GUI Sequence  -->
    <!--
      Run with admin privilege.
      No changes applied. msi asks for input from the user
      https://docs.microsoft.com/en-us/windows/win32/msi/suggested-installuisequence
      This sequence may be left out.
      -->
    <InstallUISequence>
      <Custom Action='ReadConfig_IMCAC'       Before='LaunchConditions'  >NOT Installed</Custom>
    </InstallUISequence>


    <!--  The Install Sequence  -->
    <!--
      Run with localsystem privilege (aka server side).
      https://docs.microsoft.com/en-us/windows/win32/msi/suggested-installexecutesequence
      If the UI sequence took place, some (non-UI) actions can be are repeated (e.g. CostInitialize).

      Actions before MigrateFeatureStates:
        Custom action is placed before the transaction starts, coined "immediate".
        You should not modifiy the system.
      Actions after InstallFiles:
        Custom action is placed after the transaction started, coined "deferred" and run in a sandbox.
        Deferred custom actions (DECAC) need custum action helper (CADH) to access msi properties
        You may modify the system.
      -->
    <InstallExecuteSequence>
      <Custom Action='ReadConfig_IMCAC'       Before='LaunchConditions'  >NOT Installed</Custom>
      <Custom Action='WriteConfig_CADH'
              Before='WriteConfig_DECAC'                                 >NOT Installed</Custom>
      <Custom Action='WriteConfig_DECAC'      After='InstallFiles'       >NOT Installed</Custom>
    </InstallExecuteSequence>


    <!--  The Custom Actions  -->
    <Binary Id='CustomAction01' SourceFile='CustomAction01\CustomAction01.CA.dll'/>

    <!--      IMMEDIATE CUSTOM ACTION (IMCAC) run before the transaction and should not modify the system -->
    <CustomAction
      Id="ReadConfig_IMCAC"
      DllEntry='ReadConfig_IMCAC'
      BinaryKey='CustomAction01'
      Execute='firstSequence'/>

    <!--      DEFERRED CUSTOM ACTION (DECAC) runs in a transaction and may modify the system -->
    <CustomAction
      Id="WriteConfig_DECAC"
      DllEntry='WriteConfig_DECAC'
      BinaryKey='CustomAction01'
      Execute='deferred'
      Return='check'
      Impersonate='no'/>

    <!--      Pass msi properties to the DEFERRED CUSTOM ACTION (DECAC)  -->
    <CustomAction
      Id="WriteConfig_CADH"
      Property="WriteConfig_DECAC"
      Value="CONFIGDIR_OLD=[CONFIGDIR_OLD];CONFIGDIR_NEW=[CONFIGDIR_NEW];MOVE_CONF=[MOVE_CONF];" />


    <!--  The GUI  -->
    <Property Id="WIXUI_INSTALLDIR" Value="INSTALLDIR"/>
    <UI>
      <UIRef Id="WixUI_Mondo" />

      <Publish Dialog="LicenseAgreementDlg"   Control="Next"   Event="NewDialog"   Value="HostsDlg" Order="3">LicenseAccepted = "1"</Publish>

      <Publish Dialog="HostsDlg"              Control="Back"   Event="NewDialog"   Value="LicenseAgreementDlg">1</Publish>
      <Publish Dialog="HostsDlg"              Control="Next"   Event="NewDialog"   Value="DirectoryDlg"       >1</Publish>
      <Publish Dialog="HostsDlg"              Control="Cancel" Event="SpawnDialog" Value="CancelDlg"          >1</Publish>

      <Publish Dialog="DirectoryDlg"          Control="Back"   Event="NewDialog"   Value="HostsDlg"           >1</Publish>
      <Publish Dialog="DirectoryDlg"          Control="Next"   Event="NewDialog"   Value="VerifyReadyDlg"     >NOT C_SALT_CONF_MINION_EXISTS</Publish>
      <Publish Dialog="DirectoryDlg"          Control="Next"   Event="NewDialog"   Value="MoveConfigDlg"      >    C_SALT_CONF_MINION_EXISTS</Publish>
      <Publish Dialog="DirectoryDlg"          Control="Cancel" Event="SpawnDialog" Value="CancelDlg"          >1</Publish>

      <Publish Dialog="MoveConfigDlg"         Control="Back"   Event="NewDialog"   Value="DirectoryDlg"       >1</Publish>
      <Publish Dialog="MoveConfigDlg"         Control="Next"   Event="NewDialog"   Value="VerifyReadyDlg"     >1</Publish>
      <Publish Dialog="MoveConfigDlg"         Control="Cancel" Event="SpawnDialog" Value="CancelDlg"          >1</Publish>

      <Publish Dialog="VerifyReadyDlg"        Control="Back"   Event="NewDialog"   Value="DirectoryDlg"       >NOT C_SALT_CONF_MINION_EXISTS</Publish>
      <Publish Dialog="VerifyReadyDlg"        Control="Back"   Event="NewDialog"   Value="MoveConfigDlg"      >    C_SALT_CONF_MINION_EXISTS</Publish>


      <Dialog Id="HostsDlg" Width="370" Height="270" Title="[ProductName] Setup">
        <Control Id="Title"        Type="Text"       X="15"  Y="6"   Width="200" Height="15" Transparent="yes" NoPrefix="yes" Text="{\WixUI_Font_Title}Hosts" />
        <Control Id="Description"  Type="Text"       X="25"  Y="23"  Width="280" Height="15" Transparent="yes" NoPrefix="yes" Text="Please specify master and minion." />
        <Control Id="BannerBitmap" Type="Bitmap"     X="0"   Y="0"   Width="370" Height="44" TabSkip="no" Text="!(loc.InstallDirDlgBannerBitmap)" />
        <Control Id="BannerLine"   Type="Line"       X="0"   Y="44"  Width="370" Height="0" />
        <Control Id="BottomLine"   Type="Line"       X="0"   Y="234" Width="370" Height="0" />

        <Control Id="MasterLabel"  Type="Text"       X="20"  Y="55"  Width="280" Height="15" Transparent="yes" NoPrefix="yes" Text="Master (single hostname or IP address):" />
        <Control Id="MasterId"     Type="Edit"       X="30"  Y="70"  Width="190" Height="15" Property="MASTER" />
        <Control Id="MinionLabel"  Type="Text"       X="20"  Y="85"  Width="280" Height="15" Transparent="yes" NoPrefix="yes" Text="Minion:" />
        <Control Id="MinionId"     Type="Edit"       X="30"  Y="100" Width="190" Height="15" Property="MINION_ID" />
        <Control Id="StartService" Type="CheckBox"   X="20"  Y="140" Width="280" Height="15" Property="START_MINION"       CheckBoxValue="1" Text="&amp;Start salt-minion service immediately"/>
        <Control Id="HideInARP"    Type="CheckBox"   X="20"  Y="155" Width="280" Height="15" Property="ARPSYSTEMCOMPONENT" CheckBoxValue="1" Text="&amp;Hide in 'Programs and Features'"/>

        <Control Id="Back"         Type="PushButton" X="180" Y="243" Width="56"  Height="17"               Text="!(loc.WixUIBack)" />
        <Control Id="Next"         Type="PushButton" X="236" Y="243" Width="56"  Height="17" Default="yes" Text="!(loc.WixUINext)" />
        <Control Id="Cancel"       Type="PushButton" X="304" Y="243" Width="56"  Height="17" Cancel="yes"  Text="!(loc.WixUICancel)"/>
      </Dialog>

      <Dialog Id="DirectoryDlg" Width="370" Height="270" Title="[ProductName] Setup">
        <Control Id="Title"        Type="Text"       X="15"  Y="6"   Width="200" Height="15" Transparent="yes" NoPrefix="yes" Text="{\WixUI_Font_Title}Installation directory" />
        <Control Id="Description"  Type="Text"       X="25"  Y="23"  Width="280" Height="15" Transparent="yes" NoPrefix="yes" Text="Please specify the installation directory." />
        <Control Id="BannerBitmap" Type="Bitmap"     X="0"   Y="0"   Width="370" Height="44" TabSkip="no" Text="!(loc.InstallDirDlgBannerBitmap)" />
        <Control Id="BannerLine"   Type="Line"       X="0"   Y="44"  Width="370" Height="0" />
        <Control Id="BottomLine"   Type="Line"       X="0"   Y="234" Width="370" Height="0" />

        <Control Id="i1" Type="Text"       X="20"  Y="55"  Width="280" Height="15" Transparent="yes" NoPrefix="yes" Text="Install program into directory:" />
        <Control Id="i2" Type="PathEdit"   X="30"  Y="70"  Width="250" Height="15" Property="INSTALLDIR" />
        <Control Id="i3" Type="PushButton" X="280" Y="70"  Width="40"  Height="15" Text="Browse" >
          <Publish Property="_BrowseProperty" Value="INSTALLDIR" Order="1">1</Publish>
          <Publish Event="SpawnDialog" Value="BrowseDlg" Order="2">1</Publish>
        </Control>

        <Control Id="Back"         Type="PushButton" X="180" Y="243" Width="56"  Height="17"               Text="!(loc.WixUIBack)" />
        <Control Id="Next"         Type="PushButton" X="236" Y="243" Width="56"  Height="17" Default="yes" Text="!(loc.WixUINext)" />
        <Control Id="Cancel"       Type="PushButton" X="304" Y="243" Width="56"  Height="17" Cancel="yes"  Text="!(loc.WixUICancel)"/>
      </Dialog>

      <Dialog Id="MoveConfigDlg" Width="370" Height="270" Title="[ProductName] Setup">
        <Control Id="Title"        Type="Text"       X="15"  Y="6"   Width="200" Height="15" Transparent="yes" NoPrefix="yes" Text="{\WixUI_Font_Title}Configuration directory" />
        <Control Id="Description"  Type="Text"       X="25"  Y="23"  Width="280" Height="15" Transparent="yes" NoPrefix="yes" Text="Please decide to move configuration." />
        <Control Id="BannerBitmap" Type="Bitmap"     X="0"   Y="0"   Width="370" Height="44" TabSkip="no" Text="!(loc.InstallDirDlgBannerBitmap)" />
        <Control Id="BannerLine"   Type="Line"       X="0"   Y="44"  Width="370" Height="0" />
        <Control Id="BottomLine"   Type="Line"       X="0"   Y="234" Width="370" Height="0" />

        <Control Id="m1" Type="CheckBox"   X="30"  Y="55" Width="320" Height="15" Property="MOVE_CONF" CheckBoxValue="1" Text="&amp;Move configuration from 'C:\salt' to 'C:\ProgramData\Salt Project'."/>

        <Control Id="Back"         Type="PushButton" X="180" Y="243" Width="56"  Height="17"               Text="!(loc.WixUIBack)" />
        <Control Id="Next"         Type="PushButton" X="236" Y="243" Width="56"  Height="17" Default="yes" Text="!(loc.WixUINext)" />
        <Control Id="Cancel"       Type="PushButton" X="304" Y="243" Width="56"  Height="17" Cancel="yes"  Text="!(loc.WixUICancel)"/>
      </Dialog>
    </UI>


    <!--  No cab  -->
    <MediaTemplate EmbedCab="yes"/>
  </Product>
</Wix>
